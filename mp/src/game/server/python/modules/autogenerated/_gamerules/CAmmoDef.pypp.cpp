// This file has been generated by Py++.

#include "cbase.h"
// This file has been generated by Py++.

#include "cbase.h"
#include "gamerules.h"
#include "multiplay_gamerules.h"
#include "singleplay_gamerules.h"
#include "teamplay_gamerules.h"
#include "srcpy_gamerules.h"
#include "ammodef.h"
#include "items.h"
#include "hl2mp/hl2mp_player.h"
#include "hl2mp/hl2mp_gamerules.h"
#include "tier0/valve_minmax_off.h"
#include "srcpy.h"
#include "tier0/valve_minmax_on.h"
#include "tier0/memdbgon.h"
#include "CAmmoDef.pypp.hpp"

namespace bp = boost::python;

void register_CAmmoDef_class(){

    bp::class_< CAmmoDef >( "CAmmoDef", bp::init< >() )    
        .def( 
            "AddAmmoType"
            , (void ( ::CAmmoDef::* )( char const *,int,int,int,int,int,float,int,int,int ))( &::CAmmoDef::AddAmmoType )
            , ( bp::arg("name"), bp::arg("damageType"), bp::arg("tracerType"), bp::arg("plr_dmg"), bp::arg("npc_dmg"), bp::arg("carry"), bp::arg("physicsForceImpulse"), bp::arg("nFlags"), bp::arg("minSplashSize")=(int)(4), bp::arg("maxSplashSize")=(int)(8) ) )    
        .def( 
            "AddAmmoType"
            , (void ( ::CAmmoDef::* )( char const *,int,int,char const *,char const *,char const *,float,int,int,int ))( &::CAmmoDef::AddAmmoType )
            , ( bp::arg("name"), bp::arg("damageType"), bp::arg("tracerType"), bp::arg("plr_cvar"), bp::arg("npc_var"), bp::arg("carry_cvar"), bp::arg("physicsForceImpulse"), bp::arg("nFlags"), bp::arg("minSplashSize")=(int)(4), bp::arg("maxSplashSize")=(int)(8) ) )    
        .def( 
            "DamageForce"
            , (float ( ::CAmmoDef::* )( int ))( &::CAmmoDef::DamageForce )
            , ( bp::arg("nAmmoIndex") ) )    
        .def( 
            "DamageType"
            , (int ( ::CAmmoDef::* )( int ))( &::CAmmoDef::DamageType )
            , ( bp::arg("nAmmoIndex") ) )    
        .def( 
            "Flags"
            , (int ( ::CAmmoDef::* )( int ))( &::CAmmoDef::Flags )
            , ( bp::arg("nAmmoIndex") ) )    
        .def( 
            "Index"
            , (int ( ::CAmmoDef::* )( char const * ))( &::CAmmoDef::Index )
            , ( bp::arg("psz") ) )    
        .def( 
            "MaxCarry"
            , (int ( ::CAmmoDef::* )( int ))( &::CAmmoDef::MaxCarry )
            , ( bp::arg("nAmmoIndex") ) )    
        .def( 
            "MaxSplashSize"
            , (int ( ::CAmmoDef::* )( int ))( &::CAmmoDef::MaxSplashSize )
            , ( bp::arg("nAmmoIndex") ) )    
        .def( 
            "MinSplashSize"
            , (int ( ::CAmmoDef::* )( int ))( &::CAmmoDef::MinSplashSize )
            , ( bp::arg("nAmmoIndex") ) )    
        .def( 
            "NPCDamage"
            , (int ( ::CAmmoDef::* )( int ))( &::CAmmoDef::NPCDamage )
            , ( bp::arg("nAmmoIndex") ) )    
        .def( 
            "PlrDamage"
            , (int ( ::CAmmoDef::* )( int ))( &::CAmmoDef::PlrDamage )
            , ( bp::arg("nAmmoIndex") ) )    
        .def( 
            "TracerType"
            , (int ( ::CAmmoDef::* )( int ))( &::CAmmoDef::TracerType )
            , ( bp::arg("nAmmoIndex") ) )    
        .def_readwrite( "ammoindex", &CAmmoDef::m_nAmmoIndex );

}

